[tox]
envlist =
    py{39,310,311}-test{,-alldeps,-oldestdeps,-devdeps}{,-cov}{,-clocale}
    py{39,310,311}-test-numpy{121,122,123,124}
    linkcheck
    codestyle
requires =
    setuptools >= 30.3.0
    pip >= 19.3.1
isolated_build = true
indexserver =
    NIGHTLY = https://pypi.anaconda.org/scipy-wheels-nightly/simple

[testenv]
# Suppress display of matplotlib plots generated during docs build
setenv =
    clocale: LC_ALL = C

# Pass through the following environment variables which may be needed for the CI
passenv = HOME, WINDIR, LC_ALL, LC_CTYPE, CC, CI, IS_CRON, ARCH_ON_CI

# Run the tests in a temporary directory to make sure that we don't import
# this package from the source tree
changedir = .tmp/{envname}

# tox environments are constructed with so-called 'factors' (or terms)
# separated by hyphens, e.g. test-devdeps-cov. Lines below starting with factor:
# will only take effect if that factor is included in the environment name. To
# see a list of example environments that can be run, along with a description,
# run:
#
#     tox -l -v
#
description =
    run tests
    alldeps: with all optional dependencies
    devdeps: with the latest developer version of key dependencies
    oldestdeps: with the oldest supported version of key dependencies
    cov: and test coverage
    image: with image tests
    numpy121: with numpy 1.21.*
    numpy122: with numpy 1.22.*
    numpy123: with numpy 1.23.*
    numpy124: with numpy 1.24.*

# The following provides some specific pinnings for key packages
deps =
    numpy121: numpy==1.21.*
    numpy122: numpy==1.22.*
    numpy123: numpy==1.23.*
    numpy124: numpy==1.24.*

    # The oldestdeps factor is intended to be used to install the oldest
    # versions of all dependencies that have a minimum version.
    oldestdeps: numpy==1.18.*

    devdeps: :NIGHTLY:numpy
    devdeps: git+https://github.com/scipy/scipy.git#egg=scipy

# The following indicates which extras_require from pyproject.toml will be installed
extras =
    test: test
    alldeps: all
    alldeps: test_all

commands =
    pip freeze
    !cov-!double: pytest --pyargs {toxinidir}/tests {toxinidir}/docs {posargs}
    cov-!double: pytest --pyargs {toxinidir}/tests {toxinidir}/docs --cov cosmology --cov-config={toxinidir}/pyproject.toml {posargs}
    cov: coverage xml -o {toxinidir}/coverage.xml


# This lets developers use tox to build docs and ignores warnings.
# This is not used in CI; For that, we have RTD PR builder.
[testenv:build_docs]
changedir = docs
description = invoke sphinx-build to build the HTML docs
extras = docs
commands =
    pip freeze
    sphinx-build -b html . _build/html {posargs:-j auto}


[testenv:codestyle]
skip_install = true
description = Run all style and file checks with pre-commit
deps =
    pre-commit
commands =
    pre-commit install-hooks
    pre-commit run {posargs:--color always --all-files --show-diff-on-failure}

[pytest]
testpaths =
    tests
    src/cosmology/
    docs
text_file_format = rst
addopts = -p no:doctest
markers =
    incompatible_with_mypyc: run when testing mypyc compiled code
filterwarnings =
    # tomlkit
    ignore:The config value
    # distutils
    ignore:distutils Version classes are deprecated:DeprecationWarning
    # NumPy
    ignore:The numpy.array_api submodule is still experimental. See NEP 47.:UserWarning
